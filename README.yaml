info:
  description: "API Documentation for User Registration, Authentication, and Profile Management"
  version: "1.0.0"
  title: "Project API"
host: "trendsaf production host"
basePath: "/"
schemes:
  - "https"
paths:
  /signup/registration:
    post:
      summary: "Register a new user"
      description: "Registers a new user in the system"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User registration data"
          required: true
          schema:
            type: "object"
            required:
              - firstname
              - lastname
              - email
              - password
            properties:
              firstname:
                type: "string"
                example: "Jamo"
              lastname:
                type: "string"
                example: "Aphrodisu"
              email:
                type: "string"
                example: "abraham@trendsaf.com"
              password:
                type: "string"
                example: "12345"
      responses:
        422:
          description: "Missing parameter"
          schema:
            type: "object"
            properties:
              error:
                type: "integer"
                example: 422
              message:
                type: "string"
                example: "missing parameter"
              status:
                type: "boolean"
                example: false
        400:
          description: "Invalid email format"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "invalid email"
        409:
          description: "Email already exists"
          schema:
            type: "object"
            properties:
              exists:
                type: "boolean"
                example: true
              is_verified:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "Account with email already exists"
        200:
          description: "Successful registration"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                example: "IjAyMjQwNDJmLTBhNjItNDI5YS1hM2E1LWI5ZTUyODNlNTY4NiI.4u8HnVUIzqT0Feh334fX2XX28lo"
              is_confirmed:
                type: "boolean"
                example: false
              is_verified:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "Registration successful"
              status:
                type: "integer"
                example: 200

  /verification/{id}:
    patch:
      summary: "Verify a user"
      description: "Verifies a user with a provided code"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Verification code"
          required: true
          schema:
            type: "object"
            required:
              - code
            properties:
              code:
                type: "string"
                example: "Yb785g1K"
      responses:
        422:
          description: "Missing parameter"
          schema:
            type: "object"
            properties:
              error:
                type: "integer"
                example: 422
              message:
                type: "string"
                example: "missing parameter"
              status:
                type: "boolean"
                example: false
        401:
          description: "Invalid code or unauthorized access"
          schema:
            type: "object"
            properties:
              error:
                type: "integer"
                example: 401
              message:
                type: "string"
                example: "unauthorized access"
              status:
                type: "boolean"
                example: false
        200:
          description: "Verification successful"
          schema:
            type: "object"
            properties:
              is_confirmed:
                type: "boolean"
                example: false
              is_verified:
                type: "boolean"
                example: true
              message:
                type: "string"
                example: "verification successful"
              status:
                type: "string"
                example: "verified"

  /code_resend/{id}:
    patch:
      summary: "Resend verification code"
      description: "Resends the verification code to the user's email"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          required: true
          type: "string"
      responses:
        405:
          description: "Method not allowed"
          schema:
            type: "object"
            properties:
              error:
                type: "integer"
                example: 405
              message:
                type: "string"
                example: "api call method not permitted"
              status:
                type: "boolean"
                example: false
        200:
          description: "Code resent"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "code re-sent to email"
              status:
                type: "integer"
                example: 200

  /auth/confirmation:
    post:
      summary: "Confirm the user and add profile"
      description: "Adds user profile data upon confirmation"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "X-CSRF-TOKEN"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "User profile data"
          required: true
          schema:
            type: "object"
            properties:
              company_name:
                type: "string"
              company_type:
                type: "string"
              company_size:
                type: "string"
              start_year:
                type: "string"
              annual_revenue:
                type: "string"
              company_role:
                type: "string"
              phone:
                type: "string"
              province:
                type: "string"
              country:
                type: "string"
      responses:
        200:
          description: "User confirmed and profile added"

  /auth/login:
    post:
      summary: "Authenticate user"
      description: "Login a user with email and password"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User login data"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
                example: "apercu@trendsaf.com"
              password:
                type: "string"
                example: "12345"
      responses:
        400:
          description: "Invalid email or password"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "wrong email or password"
        200:
          description: "Login successful"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: true
              is_confirmed:
                type: "boolean"
                example: false
              is_verified:
                type: "boolean"
                example: true
              message:
                type: "string"
                example: "Not verified"

  /auth/password_reset_request:
    post:
      summary: "Request password reset"
      description: "Initiates password reset process"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Email for password reset"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
                example: "nhamo@trendsaf.co"
      responses:
        404:
          description: "User not found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "User does not exist"
              status:
                type: "boolean"
                example: false
        200:
          description: "Password reset link sent"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "link sent successfully"
              status:
                type: "boolean"
                example: true

  /auth/password_reset:
    post:
      summary: "Reset password"
      description: "Allows user to reset password"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Password reset data"
          required: true
          schema:
            type: "object"
            properties:
              token:
                type: "string"
                example: "ImJmYmQ0Nzc2LTY5ZmUtNGY0Ni05YTgyLTUxMmNjMDkyNzc1OSI.ZvnWvg.rUkUIs4_8r0o4qD3cI9ny0t8oVU"
              password:
                type:
